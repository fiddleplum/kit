#pragma once#include "Model.h"#include "ResourceManager.h"#include <set>class Scene{public:	Scene();	~Scene();	Model * createModel();	void destroyModel(Model * model);	Camera * createCamera();	void destroyCamera(Camera * camera);	ResourceManager<Texture> & getTextureManager();	ResourceManager<Shader> & getShaderManager();	void render();	Scene(Scene const &) = delete;	Scene & operator =(Scene const &) = delete;private:	class ModelCompare	{	public:		bool operator ()(Model const * model0, Model const * model1)		{			return *model0 < *model1;		}	};	std::set<Camera *> mCameras;	std::set<Model *, ModelCompare> mModels;	ResourceManager<Texture> mTextureManager;	ResourceManager<Shader> mShaderManager;};